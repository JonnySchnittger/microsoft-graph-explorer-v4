<?xml version="1.0" encoding="UTF-8"?>
<testsuites>
  <testsuite id="0" name="C:\Users\v-elkag\Desktop\microsoft-graph-explorer-v4\src\tests\utils\sanitize-url-sanitization.spec.tsx" errors="0" package="C:\Users\v-elkag\Desktop\microsoft-graph-explorer-v4\src\tests\utils\sanitize-url-sanitization.spec.tsx" hostname="localhost" tests="25" failures="0" time="6.875" timestamp="2021-01-12T14:23:11">
    <properties>
    </properties>
    <testcase classname="isAllAlpha should " name="return true for aaa" time="0">
    </testcase>
    <testcase classname="isAllAlpha should " name="return true for aZa" time="0">
    </testcase>
    <testcase classname="isAllAlpha should " name="return false for 111" time="0">
    </testcase>
    <testcase classname="isAllAlpha should " name="return false for 1a1" time="0">
    </testcase>
    <testcase classname="isDepraction should " name="return true for messages_V2" time="0">
    </testcase>
    <testcase classname="isDepraction should " name="return false for messages" time="0">
    </testcase>
    <testcase classname="isDepraction should " name="return true for users_v2" time="0">
    </testcase>
    <testcase classname="isDepraction should " name="return false for users" time="0">
    </testcase>
    <testcase classname="Sanitize Query Url should" name="return url without task id" time="0">
    </testcase>
    <testcase classname="Sanitize Query Url should" name="return url without email" time="0">
    </testcase>
    <testcase classname="Sanitize Query Url should" name="return url without message id" time="0">
    </testcase>
    <testcase classname="Sanitize Query Url should" name="return url without extension id" time="0">
    </testcase>
    <testcase classname="Sanitize Query Url should" name="return url without plan id" time="0">
    </testcase>
    <testcase classname="Sanitize Query Url should" name="return url without section id" time="0">
    </testcase>
    <testcase classname="Sanitize Query Url should" name="return url with all parameters replaced" time="0">
    </testcase>
    <testcase classname="Sanitize Query Url should" name="return url with deprecated resource and without id" time="0">
    </testcase>
    <testcase classname="Sanitize Query Url should" name="return url with id within brackets" time="0">
    </testcase>
    <testcase classname="Sanitize Query Url should" name="return url with $ref path segment" time="0">
    </testcase>
    <testcase classname="Sanitize Query Url should" name="return url with $value path segment" time="0">
    </testcase>
    <testcase classname="Sanitize Query Url should" name="return url with $count path segment" time="0">
    </testcase>
    <testcase classname="Sanitize Query Url should" name="return url with key-value parameter within path segment" time="0">
    </testcase>
    <testcase classname="Sanitize Query Url should" name="return url with multiple key-value parameters within path segment" time="0">
    </testcase>
    <testcase classname="Sanitize Query Url should" name="return url with segment preceded with microsoft.graph" time="0">
    </testcase>
    <testcase classname="Sanitize Query Url should" name="return url with relative path as segment" time="0">
    </testcase>
    <testcase classname="Sanitize Query Url should" name="return url with relative path as last segment" time="0">
    </testcase>
    <system-out/>
    <system-err/>
  </testsuite>
  <testsuite id="1" name="C:\Users\v-elkag\Desktop\microsoft-graph-explorer-v4\src\tests\services\actions\adaptive-cards-action-creator.spec.ts" errors="0" package="C:\Users\v-elkag\Desktop\microsoft-graph-explorer-v4\src\tests\services\actions\adaptive-cards-action-creator.spec.ts" hostname="localhost" tests="3" failures="0" time="2.397" timestamp="2021-01-12T14:23:18">
    <properties>
    </properties>
    <testcase classname="Graph Explorer Adaptive Cards Action Creators&apos;" name="creates ADAPTIVE_FETCH_SUCCESS when getAdaptiveCardSuccess is called" time="0">
    </testcase>
    <testcase classname="Graph Explorer Adaptive Cards Action Creators&apos;" name="creates ADAPTIVE_FETCH_PENDING when getAdaptiveCardPending is called" time="0">
    </testcase>
    <testcase classname="Graph Explorer Adaptive Cards Action Creators&apos;" name="creates ADAPTIVE_FETCH_ERROR when getAdaptiveCardError is called" time="0">
    </testcase>
    <system-out/>
    <system-err/>
  </testsuite>
  <testsuite id="2" name="C:\Users\v-elkag\Desktop\microsoft-graph-explorer-v4\src\tests\services\actions\profile-action-creators.spec.tsx" errors="0" package="C:\Users\v-elkag\Desktop\microsoft-graph-explorer-v4\src\tests\services\actions\profile-action-creators.spec.tsx" hostname="localhost" tests="2" failures="0" time="1.169" timestamp="2021-01-12T14:23:21">
    <properties>
    </properties>
    <testcase classname="actions" name="creates PROFILE_REQUEST_SUCCESS when profileRequestSuccess is called" time="0">
    </testcase>
    <testcase classname="actions" name="dispatches PROFILE_REQUEST_ERROR for failed requests" time="0">
    </testcase>
    <system-out/>
    <system-err/>
  </testsuite>
  <testsuite id="3" name="C:\Users\v-elkag\Desktop\microsoft-graph-explorer-v4\src\tests\utils\sanitize-query-parameter-sanitization.spec.tsx" errors="0" package="C:\Users\v-elkag\Desktop\microsoft-graph-explorer-v4\src\tests\utils\sanitize-query-parameter-sanitization.spec.tsx" hostname="localhost" tests="40" failures="0" time="0.499" timestamp="2021-01-12T14:23:22">
    <properties>
    </properties>
    <testcase classname="Sanitize Query Parameters should" name="returns value as is when $top value is integer" time="0">
    </testcase>
    <testcase classname="Sanitize Query Parameters should" name="returns &lt;invalid-value&gt; when $top value is not integer" time="0">
    </testcase>
    <testcase classname="Sanitize Query Parameters should" name="returns value as is when $skip value is integer" time="0">
    </testcase>
    <testcase classname="Sanitize Query Parameters should" name="returns &lt;invalid-value&gt; when $skip value is not integer" time="0">
    </testcase>
    <testcase classname="Sanitize Query Parameters should" name="returns value as is when $count value is boolean true or false" time="0">
    </testcase>
    <testcase classname="Sanitize Query Parameters should" name="returns &lt;invalid-value&gt; when $count value is not boolean true or false" time="0">
    </testcase>
    <testcase classname="Sanitize Query Parameters should" name="returns value as is when $select value is the star operator to request for all structural properties" time="0">
    </testcase>
    <testcase classname="Sanitize Query Parameters should" name="returns value as is when $select value is requests for all actions/functions available for each entity" time="0">
    </testcase>
    <testcase classname="Sanitize Query Parameters should" name="returns &lt;invalid-property&gt; when $select value is not all alphabetic letters" time="0">
    </testcase>
    <testcase classname="Sanitize Query Parameters should" name="returns value as is when $orderby value contains alphabetic letters, comma and space" time="0">
    </testcase>
    <testcase classname="Sanitize Query Parameters should" name="returns &lt;invalid-value&gt; when $orderby value is not all alphabetic letters" time="0">
    </testcase>
    <testcase classname="Sanitize Query Parameters should" name="returns value as is when $orderby value contains $count" time="0">
    </testcase>
    <testcase classname="Sanitize Query Parameters should" name="returns value as is when $format value is only alphabetic letters" time="0">
    </testcase>
    <testcase classname="Sanitize Query Parameters should" name="returns value as is when $format value is media type in full and also requesting full metadata" time="0">
    </testcase>
    <testcase classname="Sanitize Query Parameters should" name="returns &lt;invalid-media-type&gt; when media type in $format value contains characters that are not letters" time="0">
    </testcase>
    <testcase classname="Sanitize Query Parameters should" name="returns &lt;invalid-media-type&gt; when media subtype type in $format value contains special characters" time="0">
    </testcase>
    <testcase classname="Sanitize Query Parameters should" name="returns &lt;invalid-media-type&gt; when parameters are not all letters" time="0">
    </testcase>
    <testcase classname="Sanitize Query Parameters should" name="returns &lt;value&gt; when $skiptoken value is provided" time="0">
    </testcase>
    <testcase classname="Sanitize Query Parameters should" name="returns &lt;value&gt; when $deltatoken value is provided" time="0">
    </testcase>
    <testcase classname="Sanitize Query Parameters should" name="returns &lt;value&gt; when simple $search value is provided" time="0">
    </testcase>
    <testcase classname="Sanitize Query Parameters should" name="returns &quot;{property-name}:&lt;value&gt;&quot; when $search value contains property name" time="0">
    </testcase>
    <testcase classname="Sanitize Query Parameters should" name="returns &lt;value&gt; AND|OR &lt;value&gt; when $search value contains comparison operators" time="0">
    </testcase>
    <testcase classname="Sanitize Query Parameters should" name="returns &lt;value&gt; for operand of $filter operation" time="0">
    </testcase>
    <testcase classname="Sanitize Query Parameters should" name="returns &lt;value&gt; for operand of $filter function operation" time="0">
    </testcase>
    <testcase classname="Sanitize Query Parameters should" name="returns sanitized value for $filter arithmetic operators" time="0">
    </testcase>
    <testcase classname="Sanitize Query Parameters should" name="returns sanitized value for $filter arithmetic operators within brackets" time="0">
    </testcase>
    <testcase classname="Sanitize Query Parameters should" name="returns sanitize value for $filter query option value within quoted text" time="0">
    </testcase>
    <testcase classname="Sanitize Query Parameters should" name="returns sanitized value with `any` collection operator for $filter query option" time="0">
    </testcase>
    <testcase classname="Sanitize Query Parameters should" name="returns sanitized value for $filter with `any` collection operator with fully qualified entity name" time="0">
    </testcase>
    <testcase classname="Sanitize Query Parameters should" name="returns sanitized value with `any` collection operator with no arguments for $filter query option" time="0">
    </testcase>
    <testcase classname="Sanitize Query Parameters should" name="returns sanitized value with `all` collection operator for $filter query option" time="0">
    </testcase>
    <testcase classname="Sanitize Query Parameters should" name="returns sanitized value with complex `all` collection operator for $filter query option" time="0">
    </testcase>
    <testcase classname="Sanitize Query Parameters should" name="returns value as is for simple $expand value" time="0">
    </testcase>
    <testcase classname="Sanitize Query Parameters should" name="returns sanitized value of nested OData query option within $expand value" time="0">
    </testcase>
    <testcase classname="Sanitize Query Parameters should" name="returns properly sanitized values for $expand value with multiple navigation properties" time="0">
    </testcase>
    <testcase classname="Sanitize Query Parameters should" name="returns sanitized values with nested non-standard query option within $expand value" time="0">
    </testcase>
    <testcase classname="Sanitize Query Parameters should" name="returns value as is for fully qualified entity name" time="0">
    </testcase>
    <testcase classname="Sanitize Query Parameters should" name="returns &lt;value&gt; when query parameter key is not OData and key is all letters" time="0">
    </testcase>
    <testcase classname="Sanitize Query Parameters should" name="returns &lt;key&gt; when query parameter key is not OData and is not all letters" time="0">
    </testcase>
    <testcase classname="Sanitize Query Parameters should" name="returns value as is when query parameter key starts with $" time="0">
    </testcase>
    <system-out/>
    <system-err/>
  </testsuite>
  <testsuite id="4" name="C:\Users\v-elkag\Desktop\microsoft-graph-explorer-v4\src\tests\utils\query-input-util.spec.ts" errors="0" package="C:\Users\v-elkag\Desktop\microsoft-graph-explorer-v4\src\tests\utils\query-input-util.spec.ts" hostname="localhost" tests="2" failures="0" time="0.368" timestamp="2021-01-12T14:23:22">
    <properties>
    </properties>
    <testcase classname="Query input util should" name="cleanup selected suggestion" time="0">
    </testcase>
    <testcase classname="Query input util should" name="replace only last occurrence of compare string" time="0">
    </testcase>
    <system-out/>
    <system-err/>
  </testsuite>
  <testsuite id="5" name="C:\Users\v-elkag\Desktop\microsoft-graph-explorer-v4\src\tests\services\reducers\query-runner-reducers.spec.tsx" errors="0" package="C:\Users\v-elkag\Desktop\microsoft-graph-explorer-v4\src\tests\services\reducers\query-runner-reducers.spec.tsx" hostname="localhost" tests="4" failures="0" time="0.365" timestamp="2021-01-12T14:23:23">
    <properties>
    </properties>
    <testcase classname="Query Runner Reducer" name="should return initial state" time="0">
    </testcase>
    <testcase classname="Query Runner Reducer" name="should handle QUERY_GRAPH_SUCCESS" time="0">
    </testcase>
    <testcase classname="Query Runner Reducer" name="should handle QUERY_GRAPH_STATUS" time="0">
    </testcase>
    <testcase classname="Query Runner Reducer" name="should handle CLEAR_QUERY_STATUS" time="0">
    </testcase>
    <system-out/>
    <system-err/>
  </testsuite>
  <testsuite id="6" name="C:\Users\v-elkag\Desktop\microsoft-graph-explorer-v4\src\tests\utils\dynamic-sort.spec.tsx" errors="0" package="C:\Users\v-elkag\Desktop\microsoft-graph-explorer-v4\src\tests\utils\dynamic-sort.spec.tsx" hostname="localhost" tests="4" failures="0" time="0.306" timestamp="2021-01-12T14:23:23">
    <properties>
    </properties>
    <testcase classname="Dynamic Sort" name="sorts an array of objects in ascending order" time="0">
    </testcase>
    <testcase classname="Dynamic Sort" name="sorts an array of objects in descending order" time="0">
    </testcase>
    <testcase classname="Dynamic Sort" name="returns unsorted object array when property does not exist" time="0">
    </testcase>
    <testcase classname="Dynamic Sort" name="returns unsorted object array when property is empty" time="0">
    </testcase>
    <system-out/>
    <system-err/>
  </testsuite>
  <testsuite id="7" name="C:\Users\v-elkag\Desktop\microsoft-graph-explorer-v4\src\tests\services\actions\request-history-action-creators.spec.tsx" errors="0" package="C:\Users\v-elkag\Desktop\microsoft-graph-explorer-v4\src\tests\services\actions\request-history-action-creators.spec.tsx" hostname="localhost" tests="1" failures="0" time="0.387" timestamp="2021-01-12T14:23:24">
    <properties>
    </properties>
    <testcase classname="Request History Action Creators" name="Adds an history item to the store" time="0">
    </testcase>
    <system-out/>
    <system-err/>
  </testsuite>
  <testsuite id="8" name="C:\Users\v-elkag\Desktop\microsoft-graph-explorer-v4\src\tests\utils\generate-groups.spec.ts" errors="0" package="C:\Users\v-elkag\Desktop\microsoft-graph-explorer-v4\src\tests\utils\generate-groups.spec.ts" hostname="localhost" tests="2" failures="0" time="0.309" timestamp="2021-01-12T14:23:24">
    <properties>
    </properties>
    <testcase classname="Generate Groups" name="should generate groups from a given list" time="0">
    </testcase>
    <testcase classname="Generate Groups" name="should return empty list for non-existent property" time="0">
    </testcase>
    <system-out/>
    <system-err/>
  </testsuite>
  <testsuite id="9" name="C:\Users\v-elkag\Desktop\microsoft-graph-explorer-v4\src\app\views\query-runner\util\iframe-message-parser.spec.ts" errors="0" package="C:\Users\v-elkag\Desktop\microsoft-graph-explorer-v4\src\app\views\query-runner\util\iframe-message-parser.spec.ts" hostname="localhost" tests="2" failures="0" time="0.398" timestamp="2021-01-12T14:23:25">
    <properties>
    </properties>
    <testcase classname="Iframe Message Parser" name="parses http request snippet correctly" time="0">
    </testcase>
    <testcase classname="Iframe Message Parser" name="parses http request snippet without a domain correctly" time="0">
    </testcase>
    <system-out/>
    <system-err/>
  </testsuite>
  <testsuite id="10" name="C:\Users\v-elkag\Desktop\microsoft-graph-explorer-v4\src\tests\services\reducers\snippets-reducer.spec.ts" errors="0" package="C:\Users\v-elkag\Desktop\microsoft-graph-explorer-v4\src\tests\services\reducers\snippets-reducer.spec.ts" hostname="localhost" tests="1" failures="0" time="0.428" timestamp="2021-01-12T14:23:25">
    <properties>
    </properties>
    <testcase classname="Graph Explorer Snippet Reducer" name="should set csharp code snippet" time="0">
    </testcase>
    <system-out/>
    <system-err/>
  </testsuite>
  <testsuite id="11" name="C:\Users\v-elkag\Desktop\microsoft-graph-explorer-v4\src\tests\services\actions\query-action-creators.spec.tsx" errors="0" package="C:\Users\v-elkag\Desktop\microsoft-graph-explorer-v4\src\tests\services\actions\query-action-creators.spec.tsx" hostname="localhost" tests="2" failures="0" time="14.55" timestamp="2021-01-12T14:23:11">
    <properties>
    </properties>
    <testcase classname="query actions" name="creates QUERY_GRAPH_SUCCESS when runQuery is called" time="0">
    </testcase>
    <testcase classname="query actions" name="dispatches QUERY_GRAPH_STATUS for failed requests" time="0">
    </testcase>
    <system-out/>
    <system-err/>
  </testsuite>
  <testsuite id="12" name="C:\Users\v-elkag\Desktop\microsoft-graph-explorer-v4\src\tests\services\actions\snippets-action-creators.spec.ts" errors="0" package="C:\Users\v-elkag\Desktop\microsoft-graph-explorer-v4\src\tests\services\actions\snippets-action-creators.spec.ts" hostname="localhost" tests="1" failures="0" time="0.488" timestamp="2021-01-12T14:23:25">
    <properties>
    </properties>
    <testcase classname="snippet actions" name="dispatches GET_SNIPPET_SUCCESS" time="0">
    </testcase>
    <system-out/>
    <system-err/>
  </testsuite>
  <testsuite id="13" name="C:\Users\v-elkag\Desktop\microsoft-graph-explorer-v4\src\tests\utils\sample-url-generation.spec.tsx" errors="0" package="C:\Users\v-elkag\Desktop\microsoft-graph-explorer-v4\src\tests\utils\sample-url-generation.spec.tsx" hostname="localhost" tests="5" failures="0" time="0.562" timestamp="2021-01-12T14:23:26">
    <properties>
    </properties>
    <testcase classname="Sample Url Generation" name="destructures sample url" time="0">
    </testcase>
    <testcase classname="Sample Url Generation" name="destructures sample url with search parameters" time="0">
    </testcase>
    <testcase classname="Sample Url Generation" name="destructures sample url with % sign" time="0">
    </testcase>
    <testcase classname="Sample Url Generation" name="returns empty properties when url is empty" time="0">
    </testcase>
    <testcase classname="Sample Url Generation" name="returns empty properties when url is invalid" time="0">
    </testcase>
    <system-out/>
    <system-err/>
  </testsuite>
  <testsuite id="14" name="C:\Users\v-elkag\Desktop\microsoft-graph-explorer-v4\src\tests\services\reducers\graph-explorer-mode.spec.ts" errors="0" package="C:\Users\v-elkag\Desktop\microsoft-graph-explorer-v4\src\tests\services\reducers\graph-explorer-mode.spec.ts" hostname="localhost" tests="1" failures="0" time="0.444" timestamp="2021-01-12T14:23:26">
    <properties>
    </properties>
    <testcase classname="Graph Explorer Mode Reducer" name="should change graph explorer Mode" time="0">
    </testcase>
    <system-out/>
    <system-err/>
  </testsuite>
  <testsuite id="15" name="C:\Users\v-elkag\Desktop\microsoft-graph-explorer-v4\src\tests\services\actions\graph-explorer-mode.spec.ts" errors="0" package="C:\Users\v-elkag\Desktop\microsoft-graph-explorer-v4\src\tests\services\actions\graph-explorer-mode.spec.ts" hostname="localhost" tests="1" failures="0" time="0.624" timestamp="2021-01-12T14:23:26">
    <properties>
    </properties>
    <testcase classname="Graph Explorer Mode Action Creators" name="Sets Graph Explorer Mode to TryIt" time="0">
    </testcase>
    <system-out/>
    <system-err/>
  </testsuite>
  <testsuite id="16" name="C:\Users\v-elkag\Desktop\microsoft-graph-explorer-v4\src\tests\services\reducers\adaptive-cards-reducer.spec.ts" errors="0" package="C:\Users\v-elkag\Desktop\microsoft-graph-explorer-v4\src\tests\services\reducers\adaptive-cards-reducer.spec.ts" hostname="localhost" tests="4" failures="0" time="0.543" timestamp="2021-01-12T14:23:27">
    <properties>
    </properties>
    <testcase classname="Graph Explorer Adaptive Cards Reducer" name="should return initial state" time="0">
    </testcase>
    <testcase classname="Graph Explorer Adaptive Cards Reducer" name="should handle FETCH_ADAPTIVE_CARD_ERROR" time="0">
    </testcase>
    <testcase classname="Graph Explorer Adaptive Cards Reducer" name="should handle FETCH_ADAPTIVE_CARD_PENDING" time="0">
    </testcase>
    <testcase classname="Graph Explorer Adaptive Cards Reducer" name="should handle FETCH_ADAPTIVE_CARD_SUCCESS" time="0">
    </testcase>
    <system-out/>
    <system-err/>
  </testsuite>
  <testsuite id="17" name="C:\Users\v-elkag\Desktop\microsoft-graph-explorer-v4\src\tests\services\reducers\request-history-reducers.spec.tsx" errors="0" package="C:\Users\v-elkag\Desktop\microsoft-graph-explorer-v4\src\tests\services\reducers\request-history-reducers.spec.tsx" hostname="localhost" tests="2" failures="0" time="0.626" timestamp="2021-01-12T14:23:27">
    <properties>
    </properties>
    <testcase classname="Request History Reducer" name="should return initial state" time="0">
    </testcase>
    <testcase classname="Request History Reducer" name="should handle ADD_HISTORY_ITEM_SUCCESS" time="0">
    </testcase>
    <system-out/>
    <system-err/>
  </testsuite>
  <testsuite id="18" name="C:\Users\v-elkag\Desktop\microsoft-graph-explorer-v4\src\tests\services\reducers\toggle-sidebar.spec.tsx" errors="0" package="C:\Users\v-elkag\Desktop\microsoft-graph-explorer-v4\src\tests\services\reducers\toggle-sidebar.spec.tsx" hostname="localhost" tests="1" failures="0" time="0.533" timestamp="2021-01-12T14:23:27">
    <properties>
    </properties>
    <testcase classname="Toggle Sidebar Reducer" name="should toggle the sidebar" time="0">
    </testcase>
    <system-out/>
    <system-err/>
  </testsuite>
  <testsuite id="19" name="C:\Users\v-elkag\Desktop\microsoft-graph-explorer-v4\src\tests\services\actions\terms-of-use-action-creator.spec.ts" errors="0" package="C:\Users\v-elkag\Desktop\microsoft-graph-explorer-v4\src\tests\services\actions\terms-of-use-action-creator.spec.ts" hostname="localhost" tests="1" failures="0" time="0.522" timestamp="2021-01-12T14:23:28">
    <properties>
    </properties>
    <testcase classname="Terms of Use Action Creators" name="Sets terms of use flag to false" time="0">
    </testcase>
    <system-out/>
    <system-err/>
  </testsuite>
  <testsuite id="20" name="C:\Users\v-elkag\Desktop\microsoft-graph-explorer-v4\src\tests\services\actions\query-input-action-creators.spec.tsx" errors="0" package="C:\Users\v-elkag\Desktop\microsoft-graph-explorer-v4\src\tests\services\actions\query-input-action-creators.spec.tsx" hostname="localhost" tests="1" failures="0" time="0.409" timestamp="2021-01-12T14:23:28">
    <properties>
    </properties>
    <testcase classname="actions" name="creates SET_SAMPLE_QUERY_SUCCESS when setSampleQuery is called" time="0">
    </testcase>
    <system-out/>
    <system-err/>
  </testsuite>
  <testsuite id="21" name="C:\Users\v-elkag\Desktop\microsoft-graph-explorer-v4\src\tests\services\reducers\auth-reducers.spec.tsx" errors="0" package="C:\Users\v-elkag\Desktop\microsoft-graph-explorer-v4\src\tests\services\reducers\auth-reducers.spec.tsx" hostname="localhost" tests="2" failures="0" time="0.525" timestamp="2021-01-12T14:23:28">
    <properties>
    </properties>
    <testcase classname="Auth Reducer" name="should return initial state" time="0">
    </testcase>
    <testcase classname="Auth Reducer" name="should handle GET_AUTH_TOKEN_SUCCESS" time="0">
    </testcase>
    <system-out/>
    <system-err/>
  </testsuite>
  <testsuite id="22" name="C:\Users\v-elkag\Desktop\microsoft-graph-explorer-v4\src\tests\services\reducers\terms-of-use-reducer.spec.ts" errors="0" package="C:\Users\v-elkag\Desktop\microsoft-graph-explorer-v4\src\tests\services\reducers\terms-of-use-reducer.spec.ts" hostname="localhost" tests="1" failures="0" time="0.573" timestamp="2021-01-12T14:23:28">
    <properties>
    </properties>
    <testcase classname="Terms of Use Action Creators" name="should return initial state" time="0">
    </testcase>
    <system-out/>
    <system-err/>
  </testsuite>
  <testsuite id="23" name="C:\Users\v-elkag\Desktop\microsoft-graph-explorer-v4\src\tests\utils\sanitize-url.spec.tsx" errors="0" package="C:\Users\v-elkag\Desktop\microsoft-graph-explorer-v4\src\tests\utils\sanitize-url.spec.tsx" hostname="localhost" tests="16" failures="0" time="0.732" timestamp="2021-01-12T14:23:29">
    <properties>
    </properties>
    <testcase classname="isAllAlpha should " name="return true for aaa" time="0">
    </testcase>
    <testcase classname="isAllAlpha should " name="return true for aZa" time="0">
    </testcase>
    <testcase classname="isAllAlpha should " name="return false for 111" time="0">
    </testcase>
    <testcase classname="isAllAlpha should " name="return false for 1a1" time="0">
    </testcase>
    <testcase classname="isDepraction should " name="return true for messages_V2" time="0">
    </testcase>
    <testcase classname="isDepraction should " name="return false for messages" time="0">
    </testcase>
    <testcase classname="isDepraction should " name="return true for users_v2" time="0">
    </testcase>
    <testcase classname="isDepraction should " name="return false for users" time="0">
    </testcase>
    <testcase classname="Sanitize Query Url should" name="return url without task id" time="0">
    </testcase>
    <testcase classname="Sanitize Query Url should" name="return url without email" time="0">
    </testcase>
    <testcase classname="Sanitize Query Url should" name="return url without message id" time="0">
    </testcase>
    <testcase classname="Sanitize Query Url should" name="return url without extension id" time="0">
    </testcase>
    <testcase classname="Sanitize Query Url should" name="return url without plan id" time="0">
    </testcase>
    <testcase classname="Sanitize Query Url should" name="return url without section id" time="0">
    </testcase>
    <testcase classname="Sanitize Query Url should" name="return url with all parameters replaced" time="0">
    </testcase>
    <testcase classname="Sanitize Query Url should" name="return url with depracated resource and without id" time="0">
    </testcase>
    <system-out/>
    <system-err/>
  </testsuite>
  <testsuite id="24" name="C:\Users\v-elkag\Desktop\microsoft-graph-explorer-v4\src\tests\services\reducers\samples-reducers.spec.tsx" errors="0" package="C:\Users\v-elkag\Desktop\microsoft-graph-explorer-v4\src\tests\services\reducers\samples-reducers.spec.tsx" hostname="localhost" tests="4" failures="0" time="0.676" timestamp="2021-01-12T14:23:30">
    <properties>
    </properties>
    <testcase classname="Samples Reducer" name="should return initial state" time="0">
    </testcase>
    <testcase classname="Samples Reducer" name="should handle SAMPLES_FETCH_SUCCESS" time="0">
    </testcase>
    <testcase classname="Samples Reducer" name="should handle SAMPLES_FETCH_ERROR" time="0">
    </testcase>
    <testcase classname="Samples Reducer" name="should handle SAMPLES_FETCH_PENDING" time="0">
    </testcase>
    <system-out/>
    <system-err/>
  </testsuite>
  <testsuite id="25" name="C:\Users\v-elkag\Desktop\microsoft-graph-explorer-v4\src\tests\utils\open-api-parser.spec.ts" errors="0" package="C:\Users\v-elkag\Desktop\microsoft-graph-explorer-v4\src\tests\utils\open-api-parser.spec.ts" hostname="localhost" tests="1" failures="0" time="0.605" timestamp="2021-01-12T14:23:30">
    <properties>
    </properties>
    <testcase classname="Open api spec parser should" name="generate parameters" time="0">
    </testcase>
    <system-out/>
    <system-err/>
  </testsuite>
  <testsuite id="26" name="C:\Users\v-elkag\Desktop\microsoft-graph-explorer-v4\src\tests\services\reducers\query-input-reducers.spec.tsx" errors="0" package="C:\Users\v-elkag\Desktop\microsoft-graph-explorer-v4\src\tests\services\reducers\query-input-reducers.spec.tsx" hostname="localhost" tests="2" failures="0" time="0.643" timestamp="2021-01-12T14:23:31">
    <properties>
    </properties>
    <testcase classname="Query INput Reducer" name="should return initial state" time="0">
    </testcase>
    <testcase classname="Query INput Reducer" name="should handle SET_SAMPLE_QUERY_SUCCESS" time="0">
    </testcase>
    <system-out/>
    <system-err/>
  </testsuite>
  <testsuite id="27" name="C:\Users\v-elkag\Desktop\microsoft-graph-explorer-v4\src\tests\utils\hash-string.spec.ts" errors="0" package="C:\Users\v-elkag\Desktop\microsoft-graph-explorer-v4\src\tests\utils\hash-string.spec.ts" hostname="localhost" tests="2" failures="0" time="0.586" timestamp="2021-01-12T14:23:31">
    <properties>
    </properties>
    <testcase classname="String to hash should" name="return 0 if string is empty" time="0">
    </testcase>
    <testcase classname="String to hash should" name="return consistent values for each hashing" time="0">
    </testcase>
    <system-out/>
    <system-err/>
  </testsuite>
  <testsuite id="28" name="C:\Users\v-elkag\Desktop\microsoft-graph-explorer-v4\src\tests\services\actions\samples-action-creators.spec.tsx" errors="0" package="C:\Users\v-elkag\Desktop\microsoft-graph-explorer-v4\src\tests\services\actions\samples-action-creators.spec.tsx" hostname="localhost" tests="1" failures="0" time="0.589" timestamp="2021-01-12T14:23:31">
    <properties>
    </properties>
    <testcase classname="actions" name="creates SAMPLES_FETCH_SUCCESS when fetchSamplesSuccess is called" time="0">
    </testcase>
    <system-out/>
    <system-err/>
  </testsuite>
  <testsuite id="29" name="C:\Users\v-elkag\Desktop\microsoft-graph-explorer-v4\src\tests\services\actions\toggle-sidebar-action-creators.spec.ts" errors="0" package="C:\Users\v-elkag\Desktop\microsoft-graph-explorer-v4\src\tests\services\actions\toggle-sidebar-action-creators.spec.ts" hostname="localhost" tests="1" failures="0" time="0.524" timestamp="2021-01-12T14:23:32">
    <properties>
    </properties>
    <testcase classname="Toggle Sidebar Action Creators" name="Sets sidebar toggle to visible" time="0">
    </testcase>
    <system-out/>
    <system-err/>
  </testsuite>
  <testsuite id="30" name="C:\Users\v-elkag\Desktop\microsoft-graph-explorer-v4\src\tests\accessibility\accessibility.spec.ts" errors="0" package="C:\Users\v-elkag\Desktop\microsoft-graph-explorer-v4\src\tests\accessibility\accessibility.spec.ts" hostname="localhost" tests="1" failures="0" time="24.592" timestamp="2021-01-12T14:23:11">
    <properties>
    </properties>
    <testcase classname="Graph Explorer" name="checks for accessibility violations" time="0">
    </testcase>
    <system-out/>
    <system-err/>
  </testsuite>
</testsuites>